@page "{building?}/{group_name?}"
@using OAT.Controllers.Schedules.Readers


@model TimetableModel
@{
	ViewData["Title"] = "Расписание группы " + Model.group_name;
}

<link rel="stylesheet" href="~/css/timetable/timetable.css" asp-append-version="true">
<section class="timetable-container">
	@if (string.IsNullOrWhiteSpace(Model.building) || string.IsNullOrWhiteSpace(Model.group_name) || Model.group is null)
	{
		<h2 class="section-title title-centered">
			Здания или группы не существует
		</h2>
	}
	else
	{
		<h2 class="section-title title-centered">
			Расписание группы @Model.group_name
		</h2>
		<table class="customized timetable" style="display: none;">
			<thead>
				<tr>
					<th>
						№
					</th>
					<th>
						Время
					</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>
						<div class="teacher">

						</div>
					</td>
				</tr>
			</tbody>
		</table>
		<table class="customized timetable">
			<thead>
				<tr>
					<th>
						№
					</th>
					<th>
						Время
					</th>
					<th>
						Понедельник-1
					</th>
					<th>
						Вторник-1
					</th>
					<th>
						Среда-1
					</th>
					<th>
						Четверг-1
					</th>
					<th>
						Пятница-1
					</th>
					<th>
						Суббота-1
					</th>
					<th>
						Воскресенье-1
					</th>
				</tr>
			</thead>
			<tbody>
				@if(Model.group != null)
				{
					var week = Model.group.weeks.Where(e => e.id == 1).First();
					@for (int lesson_id = Model.GetMinLessonsInDay(week); lesson_id <= Model.GetMaxLessonsInDay(week); lesson_id++)
					{
						var lessons = Model.GetAllLessonsByNumber(lesson_id, week);
						var ring = ScheduleReader.lesson_times[lesson_id - 1].Split(" - ");

						<tr>

							<td>
								@lesson_id
							</td>
							<td>
								@if (ring.Length == 2)
								{
									@ring[0]
									<br/>
									@ring[1]
								}
								else
								{
									@ScheduleReader.lesson_times[lesson_id - 1]
								}
							</td>

							@foreach (var lesson in lessons)
							{
								if (lesson is null)
								{
									<td></td>
								}
								else
								{
									bool HaveDifferentLessons = true;
									<td>
										<div class="subjectt">
											@if (lesson.subgroups.LastOrDefault() is null || lesson.subgroups.Last().short_subject == lesson.subgroups.First().short_subject)
											{
												HaveDifferentLessons = false;
												<div class="subjectt-name">
													@lesson.subgroups.First().short_subject
												</div>
											}
											<div class="subjectt-more">
												@if (lesson.subgroups.Count == 1)
												{
													if (HaveDifferentLessons)
													{
														<div class="subjectt-name">
															@lesson.subgroups.First().short_subject
														</div>
													}
	  
													<div class="subjectt-more-item">										  
														@if (lesson.subgroups.First().id != 0)
														{
															<div class="subjectt-teacher">
																Подгруппа @lesson.subgroups.First().id
															</div>
														}
														<div class="subject-teacher">
															@lesson.subgroups.First().teacher
														</div>
														<div class="subjectt-teacher">
															@lesson.subgroups.First().cabinet
														</div>
													</div>
												}
												else
													foreach (var group in lesson.subgroups)
													{
														if (HaveDifferentLessons)
														{
															<div class="subjectt-name">
																@group.short_subject
															</div>
														}
														<div class="subjectt-more-item">
															<div class="subject-teacher">
																Подгруппа @group.id
															</div>
															<div class="subjectt-teacher">
																@group.teacher
															</div>
															<div class="subjectt-teacher">
																@group.cabinet
															</div>
														</div>
													}
											</div>
										</div>
									</td>
								}
							}
						</tr>

					}
				}
			</tbody>
		</table>

		<table class="customized timetable">
			<thead>
				<tr>
					<th>
						№
					</th>
					<th>
						Время
					</th>
					<th>
						Понедельник-2
					</th>
					<th>
						Вторник-2
					</th>
					<th>
						Среда-2
					</th>
					<th>
						Четверг-2
					</th>
					<th>
						Пятница-2
					</th>
					<th>
						Суббота-2
					</th>
					<th>
						Воскресенье-2
					</th>
				</tr>
			</thead>
			<tbody>
				@if (Model.group != null)
				{
					var week = Model.group.weeks.Where(e => e.id == 2).First();
					@for (int lesson_id = Model.GetMinLessonsInDay(week); lesson_id <= Model.GetMaxLessonsInDay(week); lesson_id++)
					{
						var lessons = Model.GetAllLessonsByNumber(lesson_id, week);
						var ring = ScheduleReader.lesson_times[lesson_id - 1].Split(" - ");

						<tr>

							<td>
								@lesson_id
							</td>
							<td>
								@if (ring.Length == 2)
								{
									@ring[0]
									<br />
									@ring[1]
								}
								else
								{
									@ScheduleReader.lesson_times[lesson_id - 1]
								}
							</td>

							@foreach (var lesson in lessons)
							{
								if (lesson is null)
								{
									<td></td>
								}
								else
								{
									bool HaveDifferentLessons = true;
									<td>
										<div class="subject">
											@if (lesson.subgroups.LastOrDefault() is null || lesson.subgroups.Last().short_subject == lesson.subgroups.First().short_subject)
											{
												HaveDifferentLessons = false;
												<div class="subject-name">
													@lesson.subgroups.First().short_subject
												</div>
											}
											<div class="subject-more">
												@if (lesson.subgroups.Count == 1)
												{
													if (HaveDifferentLessons)
													{
														<div class="subjectt-name">
															@lesson.subgroups.First().short_subject
														</div>
													}
													<div class="subject-more-item">
														@if (lesson.subgroups.First().id != 0)
														{
															<div class="subject-teacher">
																Подгруппа @lesson.subgroups.First().id
															</div>
														}
														<div class="subject-teacher">
															@lesson.subgroups.First().teacher
														</div>
														<div class="subject-teacher">
															@lesson.subgroups.First().cabinet
														</div>
													</div>
												}
												else
													foreach (var group in lesson.subgroups)
													{
														if (HaveDifferentLessons)
														{
															<div class="subject-name">
																@group.short_subject
															</div>
														}
														<div class="subject-more-item">
															<div class="subjectt-teacher">
																Подгруппа @group.id
															</div>
															<div class="subjectt-teacher">
																@group.teacher
															</div>
															<div class="subject-teacher">
																@group.cabinet
															</div>
														</div>
													}
											</div>
										</div>
									</td>
								}
							}
						</tr>

					}
				}
			</tbody>
		</table>
	}
</section>
	