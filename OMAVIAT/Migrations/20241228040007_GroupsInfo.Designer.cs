// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OMAVIAT;

#nullable disable

namespace OMAVIAT.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241228040007_GroupsInfo")]
    partial class GroupsInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MyOAT.Entities.Database.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Corpus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("MyOAT.Entities.Database.Messages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("messageId")
                        .HasColumnType("int");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MyOAT.Entities.Database.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAnswered")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MyOAT.Entities.Database.TelegramToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.Property<long?>("userId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TelegramTokens");
                });

            modelBuilder.Entity("MyOAT.Entities.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Banned")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("group")
                        .HasColumnType("longtext");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Bell", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int?>("DaysChangesTableid")
                        .HasColumnType("int");

                    b.Property<string>("id")
                        .HasColumnType("longtext");

                    b.Property<string>("period")
                        .HasColumnType("longtext");

                    b.HasKey("TableId");

                    b.HasIndex("DaysChangesTableid");

                    b.ToTable("Bell");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.AcademicLoad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Discipline")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<int>("SubGroupId")
                        .HasColumnType("int");

                    b.Property<double>("TotalHours")
                        .HasColumnType("double");

                    b.Property<string>("TypeOfLoad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AcademicLoads");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.ChangesTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cabinet")
                        .HasColumnType("longtext");

                    b.Property<int>("corpus")
                        .HasColumnType("int");

                    b.Property<int?>("couple")
                        .HasColumnType("int");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("discipline")
                        .HasColumnType("longtext");

                    b.Property<string>("group")
                        .HasColumnType("longtext");

                    b.Property<string>("reason")
                        .HasColumnType("longtext");

                    b.Property<string>("teacher")
                        .HasColumnType("longtext");

                    b.Property<string>("was_cabinet")
                        .HasColumnType("longtext");

                    b.Property<int?>("was_couple")
                        .HasColumnType("int");

                    b.Property<string>("was_discipline")
                        .HasColumnType("longtext");

                    b.Property<string>("was_teacher")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("changes");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.DaysChangesTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("DateText")
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolWeek")
                        .HasColumnType("longtext");

                    b.Property<int>("corpus")
                        .HasColumnType("int");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("type")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("daysChanges");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.GroupInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Corpus")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GroupsInfo");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.PastCouples", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompletedHours")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("corpus")
                        .HasColumnType("int");

                    b.Property<int>("subGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PastCouples");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.ScheduleHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.TeacherInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Corpus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TeachersInfo");
                });

            modelBuilder.Entity("OMAVIAT.Schedule.Entities.Models.DisciplineGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TeacherInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherInfoId");

                    b.ToTable("DisciplineGroupModel");
                });

            modelBuilder.Entity("OMAVIAT.Schedule.Entities.Models.DisciplineTeacherModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("GroupInfoId")
                        .HasColumnType("int");

                    b.Property<int>("SubGroupId")
                        .HasColumnType("int");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GroupInfoId");

                    b.ToTable("DisciplineTeacherModel");
                });

            modelBuilder.Entity("MyOAT.Entities.Database.Advertisement", b =>
                {
                    b.HasOne("MyOAT.Entities.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyOAT.Entities.Database.Question", b =>
                {
                    b.HasOne("MyOAT.Entities.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Bell", b =>
                {
                    b.HasOne("OMAVIAT.Entities.Schedule.Database.DaysChangesTable", null)
                        .WithMany("bells")
                        .HasForeignKey("DaysChangesTableid");
                });

            modelBuilder.Entity("OMAVIAT.Schedule.Entities.Models.DisciplineGroupModel", b =>
                {
                    b.HasOne("OMAVIAT.Entities.Schedule.Database.TeacherInfo", null)
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherInfoId");
                });

            modelBuilder.Entity("OMAVIAT.Schedule.Entities.Models.DisciplineTeacherModel", b =>
                {
                    b.HasOne("OMAVIAT.Entities.Schedule.Database.GroupInfo", null)
                        .WithMany("Disciplines")
                        .HasForeignKey("GroupInfoId");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.DaysChangesTable", b =>
                {
                    b.Navigation("bells");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.GroupInfo", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("OMAVIAT.Entities.Schedule.Database.TeacherInfo", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
